<!--
  Common library which should be added to each project-build to have some commonly 
  needed functionality
  
  Created on: 01.03.2012
  Created by: Philipp Meisen <philipp@meisen.net>
  History:
    01.03.2012
      - Creation of library
  -->
<project name="library_main" basedir=".">
  <property name="main.library.version" value="1.0.5" description="The current version of the library" />
  <dirname property="library_main.basedir" file="${ant.file.library_main}"/>
  <property name="main.root" location="${library_main.basedir}\..\" />
   
  <!--
    Load the properties for the main library which might be specified
    -->
  <property name="main.config.default" location="${main.root}/ant/settings.properties" />
  <property file="${main.config.default}" />
  
  <!-- the default location of the configuration -->
  <property name="main.config.location" location="${main.root}/ant/" />
  
  <!-- files used by the script -->
  <property name="main.config.project.user" location="${basedir}/override.properties" />
  <property name="main.config.project" location="${basedir}/config.properties" />
  <property name="main.config.user.default" location="${main.config.location}/config.properties" />
  <property name="main.config.general.default" location="${main.config.location}/scriptconfig.properties" />
  <property name="main.library.resfile.build.example" location="${main.root}/build.xml" />
  <property name="main.library.resfile.config.example" location="${main.root}/ant/settings.properties.example" />
  <property name="main.library.resfile.config.user.example" location="${main.root}/ant/config.properties.example" />
  <property name="main.library.resfile.config.general.example" location="${main.root}/ant/scriptconfig.properties.example" />
  <property name="main.library.resfile.config.libraries" location="${main.root}/ant/libraryconfig.properties" />
  
  <!--
    Load the library configuration
    -->
  <property file="${main.library.resfile.config.libraries}" />
  <!--
    Load the user-specific override.properties of the project
    -->
  <property file="${main.config.project.user}" />
  <!--
    Load the config.properties of the project the main is used in
    -->
  <property file="${main.config.project}" />
  <!--
    Load the user properties for the main library which might be specified
    -->
  <property file="${main.config.user.default}" />
  <!--
    Load the general properties for the main library which might be specified
    -->
  <property file="${main.config.general.default}" />
    
  <!--
    set some properties which are globally of interest and can be used by all libraries
    -->
  <property name="main.vendor" value="" description="The vendor used for compiled/build versions" />
  <property name="main.tmpdir" location="${java.io.tmpdir}" description="The temporary folder which should be used by all libraries when generating temporary content" />
  <property name="main.init" value="false" description="For internal usage only, please do not modify this property by a file" />
  <property name="main.logLevel" value="error" description="The logging level to be used can be error, warn, info, verbose, debug" />
  <property name="main.addExtensionsByDefault" value="false" />
    
  <!--
    add the antcontrib library
    -->
  <taskdef resource="net/sf/antcontrib/antlib.xml" />
  
  <!--
    initialize - do some things that have to be done
    -->
  <if>
    <equals arg1="${main.init}" arg2="false" />
    <then>
      <!-- set timestamps DSTAMP, TSTAMP, and TODAY -->
      <tstamp>
        <format property="NOW" pattern="dd.MM.yyyy HH:mm:ss" />
      </tstamp>
    
      <!-- clean the temporary folder -->
      <mkdir dir="${main.tmpdir}" />
            
      <!-- core must be added here before any other functionality can be used -->
      <for list="${main.import.order.core}" param="main.core.library">
        <sequential>
          <var name="misc.tmp.relfile" value="" unset="true" />
          <propertycopy name="main.core.library.relfile" from="main.library.file.@{main.core.library}" />
          <var name="main.core.library.file" value="${main.root}/ant/${main.core.library.relfile}" />
          
          <echo level="debug">Importing core library: ${main.core.library.relfile}</echo>
          <import file="${main.core.library.file}" />
        </sequential>
      </for>
                
      <!-- define the loglevel -->
      <setLogLevel logLevel="${main.logLevel}" />
      
      <!-- add further additional libraries, be careful there are dependencies -->
      <importLibrariesFromList list="${main.import.order.extension}" default="${main.addExtensionsByDefault}" />
      
      <!-- add further additional libraries, be careful there are dependencies -->
      <importLibrariesFromList list="${main.import.order.general}" />
            
      <!-- make sure the proxy is checked and initialized -->
      <proxyEnable />
      
      <!-- the proxy is needed, maven depends on build! -->
      <importLibrariesFromList list="${main.import.order.proxy}" />
	    
      <!-- initialization finshed -->
      <var name="main.init" value="true" />
    </then>
  </if>
  
  <macrodef name="mainAvailable">
    <sequential>
      <echo level="debug">The main-ant-settings are imported successfully</echo>
    </sequential>
  </macrodef>
  
  <target name="versions">
    <setLogLevel logLevel="INFO" />   
    <echoproperties regex="^.+\.library\.version$" />
    <setLogLevel logLevel="${main.logLevel}" />
  </target>
  
  <target name="folders">
    <setLogLevel logLevel="INFO" />   
    <echoproperties regex="^ant\.file\.library_.+$" />
    <setLogLevel logLevel="${main.logLevel}" />
  </target>
  
  <!-- target which cleans all steps run prior -->
  <target name="cleanUp">
    <if><typefound name="mavenCleanUp"/><then><mavenCleanUp /></then></if>
    <if><typefound name="buildCleanUp"/><then><buildCleanUp /></then></if>
    <if><typefound name="updateCleanUp"/><then><updateCleanUp /></then></if>
  </target>
  
  <target name="wrapUp">
    <allLibrariesFiles filesetid="main.tmp.appData" />
    <zip destfile="wrapUp.zip">
      <fileset refid="main.tmp.appData" />
    </zip>
  </target>
</project>